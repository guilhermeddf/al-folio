---
---

@string{aps = {American Physical Society,}}

@article{PhysRev.47.777,
  title={Can Quantum-Mechanical Description of Physical Reality Be Considered Complete?},
  author={Einstein, A. and Podolsky, B. and Rosen, N.},
  abstract={In a complete theory there is an element corresponding to each element of reality. A sufficient condition for the reality of a physical quantity is the possibility of predicting it with certainty, without disturbing the system. In quantum mechanics in the case of two physical quantities described by non-commuting operators, the knowledge of one precludes the knowledge of the other. Then either (1) the description of reality given by the wave function in quantum mechanics is not complete or (2) these two quantities cannot have simultaneous reality. Consideration of the problem of making predictions concerning a system on the basis of measurements made on another system that had previously interacted with it leads to the result that if (1) is false then (2) is also false. One is thus led to conclude that the description of reality as given by a wave function is not complete.},
  journal={Phys. Rev.,},
  volume={47},
  issue={10},
  pages={777--780},
  numpages={0},
  year={1935},
  month={May},
  publisher=aps,
  doi={10.1103/PhysRev.47.777},
  url={http://link.aps.org/doi/10.1103/PhysRev.47.777}
}

@article{enucomp2017,
  title={Bechmarking entre Ferramentas de Análise Estática de Códigos Escritos em C},
  author={Freitas, Guilherme. and Leal, R. and Silva, F. A. P.},
  year={2017},
  journal={Encontro Unificado de Computação - ENUCOMP},
  publisher={Encontro Unificado de Computação - ENUCOMP},
  volume={322},
  number={8},
  pages={549--560},
  year={2017}
}

@article{sbqs2019,
  title={Applying and Adapting a Performance Deviation Analysis Tool in Web Information Systems},
  author={Santos, Jadson; Medeiros, Marcos; Kulesza, Uirá; Pinto, Felipe; Moura, Roniceli; Neto, José Gameleira; Freitas, Guilherme},
  abstract={Context: The concept of technical debt is a metaphor that contextualizes problems faced during software evolution that reflect technical compromises in tasks that are not carried out adequately during their development they can yield short-term benefit to the project in terms of increased productivity and lower cost, but that may have to be paid off with interest later. Objective: This work investigates the current state of the art of technical debt tools by identifying which activities, functionalities and kind of technical debt are handled by existing tools that support the technical debt management in software projects. Method: A systematic mapping study is performed to identify and analyze available tools for managing technical debt based on a set of five research questions. Results: The work contributes with (i) a systematic mappping of current research on the field, (ii) a highlight of the most referenced tools, their main characteristics, their supported technical debt types and activities, and (iii) a discussion of emerging findings and implications for future research. Conclusions: Our study identified 50 TD tools where 42 of them are new tools, and 8 tools extend an existing one. Most of the tools address technical debt related to code, design, and/or architecture artifacts. Besides, the different TD management activities received different levels of attention. For example, TD identification is supported by 80% of the tools, whereas 30% of them handle the TD documentation activity. Tools that deal with TD identification and measurement activities are still predominant. However, we observed that recent tools focusing onTD prevention, replacement, and prioritization activities represent emergent research trends.},
  journal={XVIII Brazilian Symposium, 2019, Fortaleza. Proceedings of the XVIII Brazilian Symposium on Software Quality},
  volume={},
  number={},
  year={2019}
}

@article{key,

  title           = {Technical Debt Tools: A Systematic Mapping Study},
  author          = {Saraiva, Diego., and Neto, José Gameleira., and Kulesza, Uirá., and Freitas, Guilherme., and Rebolças, Rodrigo., and Coelho, Roberta},
  abstract={Context: The concept of technical debt is a metaphor that contextualizes problems faced during software evolution that reflect technical compromises in tasks that are not carried out adequately during their development they can yield short-term benefit to the project in terms of increased productivity and lower cost, but that may have to be paid off with interest later. Objective: This work investigates the current state of the art of technical debt tools by identifying which activities, functionalities and kind of technical debt are handled by existing tools that support the technical debt management in software projects. Method: A systematic mapping study is performed to identify and analyze available tools for managing technical debt based on a set of five research questions. Results: The work contributes with (i) a systematic mappping of current research on the field, (ii) a highlight of the most referenced tools, their main characteristics, their supported technical debt types and activities, and (iii) a discussion of emerging findings and implications for future research. Conclusions: Our study identified 50 TD tools where 42 of them are new tools, and 8 tools extend an existing one. Most of the tools address technical debt related to code, design, and/or architecture artifacts. Besides, the different TD management activities received different levels of attention. For example, TD identification is supported by 80% of the tools, whereas 30% of them handle the TD documentation activity. Tools that deal with TD identification and measurement activities are still predominant. However, we observed that recent tools focusing onTD prevention, replacement, and prioritization activities represent emergent research trends.},
  journal         = {International Conference on Enterprise Information Systems, Online Conference.},
  volume          = {},
  number          = {},
  year            = {2021}
}
